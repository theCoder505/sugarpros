Setup things below:

login access:
Email: SugarPros1234@gmail.com
password: @Sugarpros1!


Create root password: @Sugarpros1#
Your VPS hostname: srv866573.hstgr.cloud
✓✓ SSH access: ssh root@31.97.14.107


User: root
User password: SugarPros@369
database name: sugarpros

git cloned to sugarpros

php composer.phar 



cp .env.example .env

database import to VPS:
mysql -u root -p sugarpros < /tmp/sugar_pros_db.sql
mysql -u root -p -e "USE sugarpros; SELECT * FROM users LIMIT 5;" // to see a database table 




After database import: 
sudo chgrp -R www-data /var/www/sugarpros
ls -la

sudo chmod -R 775 /var/www/sugarpros/storage/
for virtual config file: cd /etc/apache2/sites-available/
sudo nano sugarpros.com.conf



<VirtualHost *:80>
    ServerName srv866573.hstgr.cloud
    ServerAdmin SugarPros1234@gmail.com
    DocumentRoot /var/www/sugarpros/public

    <Directory /var/www/sugarpros>
        AllowOverride All
        Require all granted
    </Directory>
    ErrorLog ${APACHE_LOG_DIR}/sugarpros_error.log
    CustomLog ${APACHE_LOG_DIR}/sugarpros_access.log combined
</VirtualHost>


sudo a2dissite 000-default.conf
sudo a2ensite sugarpros.com.conf
sudo a2enmod rewrite
sudo service apache2 restart
php artisan key:generate --ansi


--------- Setting Up the Live Chat WebSocket In VPS ------------
ssh root@31.97.14.107

# Install Node.js (LTS version)
curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
sudo apt-get install -y nodejs

# Verify installation
node -v
npm -v

sudo npm install -g pm2
npm init -y
npm install express ws http




$socketURL = 'ws://31.97.14.107:3000'; // Or your domain if you have SSL
// If you set up SSL, use:
// $socketURL = 'wss://yourdomain.com/ws';

# Start with PM2 (persistent)
pm2 start server.js --name "websocket-server"

# Enable PM2 startup
pm2 save
pm2 startup

sudo ufw allow 3000
sudo ufw enable

sudo apt install nginx



sudo nano /etc/nginx/sites-available/websocket
server {
    listen 8080;
    server_name 31.97.14.107;

    # WebSocket configuration
    location /ws/ {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # Increase timeout for long-lived connections
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
    }

    # Optional: Add these for better WebSocket performance
    proxy_buffering off;
    proxy_buffer_size 16k;
    proxy_busy_buffers_size 24k;
    proxy_buffers 64 4k;
}





# Create symbolic link
sudo ln -s /etc/nginx/sites-available/websocket /etc/nginx/sites-enabled/

# Test configuration
sudo nginx -t

sudo systemctl restart nginx
pm2 logs websocket-server || All done here Holas!



--------------- For SSL Certificate To the VPS: ----------------
sudo apt install certbot python3-certbot-nginx
sudo certbot --nginx -d yourdomain.com

Then: socket = new WebSocket(`wss://yourdomain.com/ws/?userId=${userId}`);



Website Link: http://31.97.14.107

Doctor:
alfredos@gmail.com
EkWeb@7867

patient:
maxwell@gmail.com
EkWeb@7867










--------- To Export Database -------
scp database.sql root@31.97.14.107:/root/ [From your folder where the database is in pc]
root@31.97.14.107's password:
database.sql                                                                          100%   84KB  79.6KB/s   00:01

mysql -u root -p sugarpros < /root/database.sql [From VPS Terminal]




----------------- Remove old mysql: 
mysql -u root -p

# Once connected to MySQL:
USE sugarpros;

-- Disable foreign key checks temporarily
SET FOREIGN_KEY_CHECKS = 0;

-- Generate drop statements for all tables
SELECT CONCAT('DROP TABLE IF EXISTS `', table_name, '`;')
FROM information_schema.tables
WHERE table_schema = 'sugarpros';

-- After you see the list of DROP TABLE commands, you can either:
-- 1. Copy and execute them one by one, OR
-- 2. Use this automated approach:

SET @drop_tables = NULL;
SELECT GROUP_CONCAT('`', table_name, '`') INTO @drop_tables
FROM information_schema.tables
WHERE table_schema = 'sugarpros';

SET @drop_tables = CONCAT('DROP TABLE IF EXISTS ', @drop_tables);
PREPARE stmt FROM @drop_tables;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;

-- Re-enable foreign key checks
SET FOREIGN_KEY_CHECKS = 1;

-- Verify all tables are gone
SHOW TABLES;








----------------------------------- Pulling Requests From Github And setting: ---------------------
git stash
git pull origin main
# Instead of pop, check what's in the stash first:
git stash show -p
# If you're sure you want to apply:
git stash pop
# Or apply without removing from stash:
git stash apply











----------------------------- To Set On PORT 8080 ------------------------
sudo nano /etc/apache2/sites-available/sugarpros.com.conf

<VirtualHost *:8080>
    ServerName srv866573.hstgr.cloud
    ServerAdmin SugarPros1234@gmail.com
    DocumentRoot /var/www/sugarpros/public

    <Directory /var/www/sugarpros>
        AllowOverride All
        Require all granted
    </Directory>
    ErrorLog ${APACHE_LOG_DIR}/sugarpros_error.log
    CustomLog ${APACHE_LOG_DIR}/sugarpros_access.log combined
</VirtualHost>




sudo nano /etc/apache2/ports.conf
# If you just change the port or add more ports here, you will likely also
# have to change the VirtualHost statement in
# /etc/apache2/sites-enabled/000-default.conf

Listen 8080

<IfModule ssl_module>
        Listen 443
</IfModule>

<IfModule mod_gnutls.c>
        Listen 443
</IfModule>










sudo a2dissite 000-default.conf

sudo a2ensite sugarpros.com.conf
sudo systemctl restart apache2

sudo ufw allow 8080
sudo ufw reload


http://31.97.14.107:8080














// new Process:
mysql -u root -p
SugarPros@369
# Once connected to MySQL:
USE sugarpros;



-- First get all table names in one command
SELECT GROUP_CONCAT(table_name) INTO @tables 
FROM information_schema.tables 
WHERE table_schema = 'sugarpros';

-- Then dynamically generate the DROP statement
SET @sql = CONCAT('DROP TABLE IF EXISTS ', @tables);
PREPARE stmt FROM @sql;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;


nano /root/sugarpros_db.sql 
nano /root/e_prescription.sql 
Then paste the database SQL codes there 
Then below:
mysql -u root -p sugarpros < /root/sugarpros_db.sql
mysql -u root -p sugarpros < /root/e_prescription.sql







DROP TABLE IF EXISTS admins;
DROP TABLE IF EXISTS providers;
DROP TABLE IF EXISTS biller_admins;























sugarpros.site setup as the main website.
sudo nano /etc/apache2/sites-available/sugarpros.site.conf

<VirtualHost *:80>
    ServerName sugarpros.site
    ServerAlias www.sugarpros.site
    ServerAdmin SugarPros1234@gmail.com
    DocumentRoot /var/www/sugarpros/public

    <Directory /var/www/sugarpros>
        AllowOverride All
        Require all granted
    </Directory>

    ErrorLog ${APACHE_LOG_DIR}/sugarpros_site_error.log
    CustomLog ${APACHE_LOG_DIR}/sugarpros_site_access.log combined
</VirtualHost>


Enable the Virtual Hosts
sudo a2dissite sugarpros.com.conf // disable old config. 
sudo a2ensite sugarpros.site.conf // enable new config.


sudo systemctl stop apache2
sudo systemctl disable apache2



sudo nano /etc/nginx/sites-available/sugarpros.site
server {
    listen 80;
    server_name sugarpros.site www.sugarpros.site;

    root /var/www/sugarpros/public;
    index index.php index.html index.htm;

    # Logs
    access_log /var/log/nginx/sugarpros_site_access.log;
    error_log /var/log/nginx/sugarpros_site_error.log;

    # Laravel configuration
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # PHP-FPM configuration
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;  # Adjust PHP version if needed
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

    # Deny access to .htaccess files
    location ~ /\.ht {
        deny all;
    }

    # Cache static assets
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        expires 30d;
        add_header Cache-Control "public, immutable";
    }
}


Response: https://claude.ai/chat/f8be66d9-726f-4c5a-b7b8-c9723002fbf8



