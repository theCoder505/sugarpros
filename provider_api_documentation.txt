Provider Panel API Documentation
Table of Contents
Authentication

Dashboard

Patient Records

Appointments

Notes Management

Virtual Notes

Clinical Notes

Quest Labs

E-Prescriptions

Notetaker

Chats

AI Chat

Account Management

Notifications

ClaimMD Integration

Authentication
Send OTP
URL: /provider/auth/otp/send
Method: POST
Headers: Content-Type: application/json
Request Body:

json
{
    "email": "provider@example.com",
    "username": "Dr. Smith",
    "prefix_code": "Dr.",
    "provider_role": "doctor",
    "mobile": "1234567890",
    "password": "password123",
    "password_confirmation": "password123"
}
Response:

json
{
    "type": "success",
    "message": "OTP sent successfully"
}
Verify OTP
URL: /provider/auth/otp/verify
Method: POST
Headers: Content-Type: application/json
Request Body:

json
{
    "email": "provider@example.com",
    "otp": "123456"
}
Response:

json
{
    "type": "success",
    "message": "OTP verified successfully"
}
Register
URL: /provider/auth/register
Method: POST
Headers: Content-Type: application/json
Request Body:

json
{
    "username": "Dr. Smith",
    "email": "provider@example.com",
    "prefix_code": "Dr.",
    "mobile": "1234567890",
    "password": "password123",
    "password_confirmation": "password123",
    "provider_role": "doctor"
}
Response:

json
{
    "type": "success",
    "message": "Registration successful",
    "data": {
        "provider": {
            "provider_id": "PR2506001",
            "name": "Dr. Smith",
            "email": "provider@example.com",
            "provider_role": "doctor",
            "pod_name": "A"
        },
        "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
    }
}
Login
URL: /provider/auth/login
Method: POST
Headers: Content-Type: application/json
Request Body:

json
{
    "email": "provider@example.com",
    "password": "password123"
}
Response:

json
{
    "type": "success",
    "message": "Login successful",
    "data": {
        "provider": {
            "provider_id": "PR2506001",
            "name": "Dr. Smith",
            "email": "provider@example.com"
        },
        "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
    }
}
Logout
URL: /provider/auth/logout
Method: POST
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Response:

json
{
    "type": "success",
    "message": "Logged out successfully"
}
Dashboard
Get Dashboard Data
URL: /provider/dashboard
Method: GET
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Response:

json
{
    "type": "success",
    "data": {
        "provider_id": "PR2506001",
        "patients": [
            {
                "patient_id": "PT2506001",
                "name": "John Doe",
                "email": "john@example.com",
                "latest_message": "Hello Doctor",
                "message_time": "2023-06-25T10:30:00Z",
                "unread_count": 2
            }
        ],
        "appointments": [
            {
                "appointment_uid": "APPT12345",
                "patient_id": "PT2506001",
                "date": "2023-06-28",
                "time": "14:00:00",
                "status": "scheduled"
            }
        ],
        "chats": [
            {
                "patient_id": "PT2506001",
                "name": "John Doe",
                "latest_message": "Hello Doctor",
                "message_time": "2023-06-25T10:30:00Z"
            }
        ],
        "total_unread": 3
    }
}
Patient Records
Get All Patients
URL: /provider/patients
Method: GET
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Response:

json
{
    "type": "success",
    "data": {
        "patients": [
            {
                "patient_id": "PT2506001",
                "name": "John Doe",
                "email": "john@example.com"
            }
        ],
        "user_details": [
            {
                "patient_id": "PT2506001",
                "age": 35,
                "gender": "male"
            }
        ]
    }
}
Get Patient Records by Type
URL: /provider/patients/{patient_id}/records/{type}
Method: GET
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Types:

virtual-notes

clinical-notes

quest-lab

e-prescription

Response (Virtual Notes Example):

json
{
    "type": "success",
    "data": [
        {
            "id": 1,
            "appointment_uid": "APPT12345",
            "main_note": "Patient reported improved symptoms",
            "created_at": "2023-06-20T09:15:00Z"
        }
    ]
}
Appointments
Get All Appointments
URL: /provider/appointments
Method: GET
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Response:

json
{
    "type": "success",
    "data": [
        {
            "appointment_uid": "APPT12345",
            "patient_id": "PT2506001",
            "date": "2023-06-28",
            "time": "14:00:00",
            "status": "scheduled"
        }
    ]
}
Get Appointment Details
URL: /provider/appointments/{appointment_uid}
Method: GET
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Response:

json
{
    "type": "success",
    "data": {
        "appointment": {
            "appointment_uid": "APPT12345",
            "patient_id": "PT2506001",
            "date": "2023-06-28",
            "time": "14:00:00",
            "status": "scheduled"
        },
        "virtual_notes": [
            {
                "id": 1,
                "main_note": "Patient reported improved symptoms"
            }
        ],
        "clinical_notes": [],
        "questlab_notes": [],
        "eprescription_notes": [],
        "meeting_url": "https://meet.example.com/room/APPT12345"
    }
}
Schedule Meeting
URL: /provider/appointments/{appointment_uid}/meeting
Method: POST
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Response:

json
{
    "type": "success",
    "message": "Meeting scheduled successfully",
    "data": {
        "appointment_uid": "APPT12345",
        "meet_link": "scheduled"
    }
}
Start Meeting
URL: /provider/appointments/{appointment_id}/meeting/start
Method: GET
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Response:

json
{
    "type": "success",
    "message": "Meeting can be started",
    "data": {
        "meeting_url": "https://meet.example.com/room/APPT12345"
    }
}
Notes Management
Virtual Notes
Get All Virtual Notes
URL: /provider/appointments/{appointment_uid}/notes/virtual
Method: GET
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Response:

json
{
    "type": "success",
    "data": [
        {
            "id": 1,
            "main_note": "Patient reported improved symptoms",
            "created_at": "2023-06-20T09:15:00Z"
        }
    ]
}
Create Virtual Note
URL: /provider/appointments/{appointment_uid}/notes/virtual
Method: POST
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Request Body:

json
{
    "main_note": "Patient reported improved symptoms"
}
Response:

json
{
    "type": "success",
    "message": "Virtual note created successfully",
    "data": {
        "id": 2,
        "main_note": "Patient reported improved symptoms"
    }
}
Update Virtual Note
URL: /provider/appointments/{appointment_uid}/notes/virtual/{note_id}
Method: PUT
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Request Body:

json
{
    "main_note": "Updated note about symptoms"
}
Response:

json
{
    "type": "success",
    "message": "Virtual note updated successfully",
    "data": {
        "id": 2,
        "main_note": "Updated note about symptoms"
    }
}
Delete Virtual Note
URL: /provider/appointments/{appointment_uid}/notes/virtual/{note_id}
Method: DELETE
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Response:

json
{
    "type": "success",
    "message": "Virtual note deleted successfully"
}
Clinical Notes
Get All Clinical Notes
URL: /provider/appointments/{appointment_uid}/notes/clinical
Method: GET
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Response:

json
{
    "type": "success",
    "data": [
        {
            "id": 1,
            "chief_complaint": "Diabetes management",
            "history_of_present_illness": "Patient has type 2 diabetes",
            "created_at": "2023-06-20T09:15:00Z"
        }
    ]
}
Create Clinical Note
URL: /provider/appointments/{appointment_uid}/notes/clinical
Method: POST
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Request Body:

json
{
    "chief_complaint": "Diabetes management",
    "history_of_present_illness": "Patient has type 2 diabetes",
    "past_medical_history": "Hypertension",
    "medications": "Metformin 500mg twice daily",
    "family_history": "Father with diabetes",
    "social_history": "Non-smoker, occasional alcohol",
    "physical_examination": "Normal BMI, no abnormalities",
    "assessment_plan": "Continue current regimen",
    "progress_notes": "Patient doing well",
    "provider_information": "Dr. Smith"
}
Response:

json
{
    "type": "success",
    "message": "Clinical note created successfully",
    "data": {
        "id": 2,
        "chief_complaint": "Diabetes management"
    }
}
Quest Labs
Get All Quest Labs
URL: /provider/appointments/{appointment_uid}/notes/quest-labs
Method: GET
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Response:

json
{
    "type": "success",
    "data": [
        {
            "id": 1,
            "test_name": "HbA1c",
            "test_code": "HBA1C",
            "category": "Diabetes",
            "created_at": "2023-06-20T09:15:00Z"
        }
    ]
}
Create Quest Lab
URL: /provider/appointments/{appointment_uid}/notes/quest-labs
Method: POST
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Request Body:

json
{
    "test_name": "HbA1c",
    "test_code": "HBA1C",
    "category": "Diabetes",
    "specimen_type": "Blood",
    "urgency": "Routine",
    "preferred_lab_location": "123 Main St",
    "date": "2023-06-28",
    "time": "10:00",
    "patient_name": "John Doe",
    "patient_id": "PT2506001",
    "clinical_notes": "Monitor diabetes control",
    "patient_phone_no": "1234567890",
    "insurance_provider": "Medicare",
    "estimated_cost": 50.00
}
Response:

json
{
    "type": "success",
    "message": "Quest Lab created successfully",
    "data": {
        "id": 2,
        "test_name": "HbA1c"
    }
}
E-Prescriptions
Get All E-Prescriptions
URL: /provider/appointments/{appointment_uid}/notes/e-prescriptions
Method: GET
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Response:

json
{
    "type": "success",
    "data": [
        {
            "id": 1,
            "drug_name": "Metformin",
            "strength": "500mg",
            "created_at": "2023-06-20T09:15:00Z"
        }
    ]
}
Create E-Prescription
URL: /provider/appointments/{appointment_uid}/notes/e-prescriptions
Method: POST
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Request Body:

json
{
    "patient_name": "John Doe",
    "patient_id": "PT2506001",
    "age": 35,
    "gender": "male",
    "allergies": "None",
    "drug_name": "Metformin",
    "strength": "500mg",
    "form_manufacturer": "Tablet",
    "dose_amount": "1 tablet",
    "frequency": "Twice daily",
    "time_duration": "30 days",
    "quantity": 60,
    "refills": 2,
    "start_date": "2023-06-28"
}
Response:

json
{
    "type": "success",
    "message": "E-Prescription created successfully",
    "data": {
        "id": 2,
        "drug_name": "Metformin"
    }
}
Notetaker
Get All Notetakers
URL: /provider/notetaker
Method: GET
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Response:

json
{
    "type": "success",
    "data": {
        "notetakers": [
            {
                "note_uid": "Note123456",
                "appointment_id": "APPT12345",
                "video_url": "/storage/provider/notetaker_videos/video.mp4"
            }
        ],
        "notes": [
            {
                "note_uid": "Note123456",
                "note_text": "Important point at 2:30"
            }
        ],
        "appointments": [
            {
                "appointment_uid": "APPT12345",
                "date": "2023-06-28"
            }
        ]
    }
}
Create Notetaker
URL: /provider/notetaker
Method: POST
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: multipart/form-data

Request Body:

appointment_uid: "APPT12345"

video_file: (File upload)

Response:

json
{
    "type": "success",
    "message": "Notetaker video added successfully",
    "data": {
        "note_uid": "Note123456",
        "video_url": "/storage/provider/notetaker_videos/video.mp4"
    }
}
Add Note to Notetaker
URL: /provider/notetaker/{note_uid}/notes
Method: POST
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Request Body:

json
{
    "note_text": "Important point at 2:30"
}
Response:

json
{
    "type": "success",
    "message": "Note added successfully",
    "data": {
        "id": 1,
        "note_text": "Important point at 2:30"
    }
}
Chats
Get Chat Sessions
URL: /provider/chats
Method: GET
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Response:

json
{
    "type": "success",
    "data": {
        "chats": [
            {
                "patient_id": "PT2506001",
                "name": "John Doe",
                "latest_message": "Hello Doctor",
                "message_time": "2023-06-25T10:30:00Z",
                "unread_count": 2
            }
        ],
        "total_unread": 3
    }
}
Get Chat Messages
URL: /provider/chats/{patient_id}
Method: GET
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Response:

json
{
    "type": "success",
    "data": [
        {
            "id": 1,
            "sent_by": "PT2506001",
            "message": "Hello Doctor",
            "created_at": "2023-06-25T10:30:00Z"
        }
    ]
}
Send Message
URL: /provider/chats/{patient_id}
Method: POST
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Request Body:

json
{
    "message": "How are you feeling today?"
}
Response:

json
{
    "type": "success",
    "message": "Message sent successfully",
    "data": {
        "id": 2,
        "message": "How are you feeling today?"
    }
}
Send Image Message
URL: /provider/chats/{patient_id}/image
Method: POST
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: multipart/form-data

Request Body:

image: (Image file upload)

Response:

json
{
    "type": "success",
    "message": "Image message sent successfully",
    "data": {
        "id": 3,
        "message": "/storage/chat_images/image.jpg",
        "message_type": "image"
    }
}
AI Chat
Get AI Chat Sessions
URL: /provider/ai-chat
Method: GET
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Response:

json
{
    "type": "success",
    "data": [
        {
            "chatuid": "Chat12345",
            "message": "Hello, how can I help you?",
            "created_at": "2023-06-25T10:30:00Z"
        }
    ]
}
Get AI Chat Messages
URL: /provider/ai-chat/{chat_uid}
Method: GET
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Response:

json
{
    "type": "success",
    "data": [
        {
            "message": "Hello, how can I help you?",
            "created_at": "2023-06-25T10:30:00Z"
        },
        {
            "message": "I need help with diabetes management",
            "created_at": "2023-06-25T10:31:00Z"
        }
    ]
}
Send AI Message
URL: /provider/ai-chat/{chat_uid}
Method: POST
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Request Body:

json
{
    "message": "What's the recommended HbA1c target?"
}
Response:

json
{
    "type": "success",
    "message": "AI response received",
    "data": {
        "reply": "The recommended HbA1c target for most adults with diabetes is less than 7%."
    }
}
Clear AI Chat Session
URL: /provider/ai-chat/{chat_uid}
Method: DELETE
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Response:

json
{
    "type": "success",
    "message": "Chat session cleared",
    "data": {
        "new_chat_uid": "Chat67890"
    }
}
Account Management
Get Account Info
URL: /provider/account
Method: GET
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Response:

json
{
    "type": "success",
    "data": {
        "provider": {
            "provider_id": "PR2506001",
            "name": "Dr. Smith",
            "email": "provider@example.com",
            "mobile": "1234567890",
            "profile_picture": "/storage/provider/profiles/photo.jpg"
        },
        "prefixcode": ["Dr.", "Mr.", "Mrs."],
        "languages": ["English", "Spanish"]
    }
}
Update Account Info
URL: /provider/account
Method: PUT
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Request Body:

json
{
    "first_name": "John",
    "last_name": "Smith",
    "email": "newemail@example.com",
    "prefix_code": "Dr.",
    "phone_number": "9876543210",
    "about_me": "Endocrinologist specializing in diabetes",
    "language": "English"
}
Response:

json
{
    "type": "success",
    "message": "Account updated successfully",
    "data": {
        "provider_id": "PR2506001",
        "name": "Dr. John Smith"
    }
}
Update Profile Picture
URL: /provider/account/profile-picture
Method: POST
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: multipart/form-data

Request Body:

profile_picture: (Image file upload)

Response:

json
{
    "type": "success",
    "message": "Profile picture updated successfully",
    "data": {
        "profile_picture": "/storage/provider/profiles/newphoto.jpg"
    }
}
Send Password OTP
URL: /provider/account/password/otp
Method: POST
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Request Body:

json
{
    "email": "provider@example.com"
}
Response:

json
{
    "type": "success",
    "message": "OTP sent successfully"
}
Verify Password OTP
URL: /provider/account/password/verify
Method: POST
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Request Body:

json
{
    "email": "provider@example.com",
    "otp": "123456"
}
Response:

json
{
    "type": "success",
    "message": "OTP verified successfully"
}
Change Password
URL: /provider/account/password/change
Method: POST
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Request Body:

json
{
    "email": "provider@example.com",
    "current_password": "oldpassword123",
    "new_password": "newpassword123",
    "new_password_confirmation": "newpassword123"
}
Response:

json
{
    "type": "success",
    "message": "Password changed successfully"
}
Delete Account
URL: /provider/account
Method: DELETE
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Response:

json
{
    "type": "success",
    "message": "Account deleted successfully"
}
Notifications
Get Notifications
URL: /provider/notifications
Method: GET
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Response:

json
{
    "type": "success",
    "data": [
        {
            "id": 1,
            "notification": "New appointment scheduled",
            "created_at": "2023-06-25T10:30:00Z",
            "read_status": 0
        }
    ]
}
Delete Notification
URL: /provider/notifications/{notification_id}
Method: DELETE
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Response:

json
{
    "type": "success",
    "message": "Notification deleted successfully"
}
ClaimMD Integration
Get ClaimMD Credentials
URL: /provider/patient-claims-biller
Method: GET
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Response:

json
{
    "type": "success",
    "data": {
        "CLAIM_MD_CLIENT_ID": "client123",
        "CLAIM_MD_API_KEY": "api_key_123",
        "CLAIM_MD_ENV": "production"
    }
}
Upload Claim File
URL: /provider/claim-md/upload
Method: POST
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: multipart/form-data

Request Body:

claim_file: (File upload)

file_name: "claim_837.txt"

Response:

json
{
    "type": "success",
    "data": {
        "FileID": "file123",
        "Status": "Uploaded"
    }
}
Get Upload List
URL: /provider/claim-md/uploadlist
Method: GET
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Response:

json
{
    "type": "success",
    "data": {
        "Files": [
            {
                "FileID": "file123",
                "FileName": "claim_837.txt",
                "UploadDate": "2023-06-25"
            }
        ]
    }
}
Delete Uploaded File
URL: /provider/claim-md/deletefile
Method: DELETE
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Request Body:

json
{
    "file_id": "file123"
}
Response:

json
{
    "type": "success",
    "data": {
        "message": "File deleted successfully"
    }
}
View Uploaded File
URL: /provider/claim-md/viewfile
Method: GET
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Query Parameters:

file_id: "file123"

Response:

json
{
    "type": "success",
    "data": {
        "content": "ISA*00*...",
        "content_type": "text/plain"
    }
}
Download File
URL: /provider/claim-md/downloadfile
Method: GET
Headers:

Authorization: Bearer [JWT_TOKEN]

Content-Type: application/json

Query Parameters:

file_id: "file123"

filename: "claim_837.txt"

Response:

File download with appropriate Content-Type header